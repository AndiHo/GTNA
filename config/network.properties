# 
# ===========================================================
# GTNA : Graph-Theoretic Network Analyzer
# ===========================================================
# 
# (C) Copyright 2009-2011, by Benjamin Schiller (P2P, TU Darmstadt)
# and Contributors
# 
# Project Info:  http://www.p2p.tu-darmstadt.de/research/gtna/
# 
# GTNA is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# GTNA is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
# 
# ---------------------------------------
# network.properties
# ---------------------------------------
# (C) Copyright 2009-2011, by Benjamin Schiller (P2P, TU Darmstadt)
# and Contributors 
# 
# Original Author: Benjamin Schiller;
# Contributors:    -;
# 
# Changes since 2011-05-17
# ---------------------------------------
# 

##########################################################
## NETWORK DESCRIPTION
## - dkey_NETWORK_DESCRIPTION = network description, may contain:
##                              - %CONNECTED
##                              - %NAME
##                              - %NODES
##                              - %EDGES
##
## - dkey_NETWORK_DESCRIPTION_CONNECTED = tag for connected network
## - dkey_NETWORK_DESCRIPTION_NOT_CONNECTED = tag for fragmentated networks
## - dkey_NETWORK_DESCRIPTION_CONFIG_MODE = mode to create configuration
##                                          - VALUES_ONLY
##                                          - SHORT
##                                          - LONG
## - dkey_NETWORK_DESCRIPTION_CONFIG_START = start of config (not printed if empty)
## - dkey_NETWORK_DESCRIPTION_CONFIG_END = end of config (not printed if empty)
## - dkey_NETWORK_DESCRIPTION_CONFIG_MIDDLE = SHORT / LONG: between name and value
## - dkey_NETWORK_DESCRIPTION_CONFIG_SEPARATOR = seperator between values
##########################################################

##########################################################
##########################################################
## NETWORKS
## - nwkey_NAME = network name
## - nwkey_FOLDER = network folder
##########################################################
##########################################################

NETWORK_COMPARE_NODES_NAME = Nodes
NETWORK_COMPARE_EDGES_NAME = Edges
NETWORK_COMPARE_NETWORKS_NAME = Networks
NETWORK_COMPARE_NETWORKS_VALUE = -666
NETWORK_COMPARE_NETWORKS_DESCRIPTION = ???
NETWORK_COMPARE_SAME_NAME = ? ? ?
NETWORK_COMPARE_SAME_VALUE = 0
NETWORK_COMPARE_DIFFERENT_NODES_X = x
NETWORK_COMPARE_DIFFERENT_EDGES_X = x
NETWORK_COMPARE_DIFFERENT_VALUE_X = x
NETWORK_COMPARE_DIFFERENT_NODES_Y = y
NETWORK_COMPARE_DIFFERENT_EDGES_Y = y
NETWORK_COMPARE_DIFFERENT_VALUE_Y = y

DEFAULT_NETWORK_DESCRIPTION = %ROUTING_FAILURE%CONNECTED%NAME - %NODES%CONFIG%RA%T
DEFAULT_NETWORK_DESCRIPTION_CONNECTED = 
DEFAULT_NETWORK_DESCRIPTION_NOT_CONNECTED = * (%CONNECTIVITY) 
DEFAULT_NETWORK_DESCRIPTION_ROUTING_FAILURE = ! (%ROUTING_SUCCESS) 
DEFAULT_NETWORK_DESCRIPTION_NO_ROUTING_FAILURE = 
DEFAULT_NETWORK_DESCRIPTION_CONFIG_MODE = SHORT
DEFAULT_NETWORK_DESCRIPTION_CONFIG_START = \ (
DEFAULT_NETWORK_DESCRIPTION_CONFIG_END = )
DEFAULT_NETWORK_DESCRIPTION_CONFIG_MIDDLE = =
DEFAULT_NETWORK_DESCRIPTION_CONFIG_SEPARATOR = , 
DEFAULT_NETWORK_DESCRIPTION_ROUTING_ALGORITHM = \ (%RA)
DEFAULT_NETWORK_DESCRIPTION_TRANSFORMATIONS = \ [%T]
DEFAULT_NETWORK_DESCRIPTION_TRANSFORMATIONS_SEPARATOR = , 

VALUES_ONLY_NETWORK_DESCRIPTION = %ROUTING_FAILURE%CONNECTED%NAME - %NODES%CONFIG%RA%T
VALUES_ONLY_NETWORK_DESCRIPTION_CONNECTED = 
VALUES_ONLY_NETWORK_DESCRIPTION_NOT_CONNECTED = * (%CONNECTIVITY) 
VALUES_ONLY_NETWORK_DESCRIPTION_ROUTING_FAILURE = ! (%ROUTING_SUCCESS) 
VALUES_ONLY_NETWORK_DESCRIPTION_NO_ROUTING_FAILURE = 
VALUES_ONLY_NETWORK_DESCRIPTION_CONFIG_MODE = VALUES_ONLY
VALUES_ONLY_NETWORK_DESCRIPTION_CONFIG_START = \ (
VALUES_ONLY_NETWORK_DESCRIPTION_CONFIG_END = )
VALUES_ONLY_NETWORK_DESCRIPTION_CONFIG_MIDDLE = =
VALUES_ONLY_NETWORK_DESCRIPTION_CONFIG_SEPARATOR = , 
VALUES_ONLY_NETWORK_DESCRIPTION_ROUTING_ALGORITHM = \ (%RA)
VALUES_ONLY_NETWORK_DESCRIPTION_TRANSFORMATIONS = \ [%T]
VALUES_ONLY_NETWORK_DESCRIPTION_TRANSFORMATIONS_SEPARATOR = , 

LONG_NETWORK_DESCRIPTION = %ROUTING_FAILURE%CONNECTED%NAME - %NODES%CONFIG%RA%T
LONG_NETWORK_DESCRIPTION_CONNECTED = 
LONG_NETWORK_DESCRIPTION_NOT_CONNECTED = * (%CONNECTIVITY) 
LONG_NETWORK_DESCRIPTION_ROUTING_FAILURE = ! (%ROUTING_SUCCESS) 
LONG_NETWORK_DESCRIPTION_NO_ROUTING_FAILURE = 
LONG_NETWORK_DESCRIPTION_CONFIG_MODE = LONG
LONG_NETWORK_DESCRIPTION_CONFIG_START = \ (
LONG_NETWORK_DESCRIPTION_CONFIG_END = )
LONG_NETWORK_DESCRIPTION_CONFIG_MIDDLE = =
LONG_NETWORK_DESCRIPTION_CONFIG_SEPARATOR = , 
LONG_NETWORK_DESCRIPTION_ROUTING_ALGORITHM = \ (%RA)
LONG_NETWORK_DESCRIPTION_TRANSFORMATIONS = \ [%T]
LONG_NETWORK_DESCRIPTION_TRANSFORMATIONS_SEPARATOR = , 

SHORT_NETWORK_DESCRIPTION = %ROUTING_FAILURE%CONNECTED%NAME - %NODES%CONFIG%RA%T
SHORT_NETWORK_DESCRIPTION_CONNECTED = 
SHORT_NETWORK_DESCRIPTION_NOT_CONNECTED = * (%CONNECTIVITY) 
SHORT_NETWORK_DESCRIPTION_ROUTING_FAILURE = ! (%ROUTING_SUCCESS) 
SHORT_NETWORK_DESCRIPTION_NO_ROUTING_FAILURE = 
SHORT_NETWORK_DESCRIPTION_CONFIG_MODE = SHORT
SHORT_NETWORK_DESCRIPTION_CONFIG_START = \ (
SHORT_NETWORK_DESCRIPTION_CONFIG_END = )
SHORT_NETWORK_DESCRIPTION_CONFIG_MIDDLE = =
SHORT_NETWORK_DESCRIPTION_CONFIG_SEPARATOR = , 
SHORT_NETWORK_DESCRIPTION_ROUTING_ALGORITHM = \ (%RA)
SHORT_NETWORK_DESCRIPTION_TRANSFORMATIONS = \ [%T]
SHORT_NETWORK_DESCRIPTION_TRANSFORMATIONS_SEPARATOR = , 
