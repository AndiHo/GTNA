package gtna.metrics;

import gtna.data.Value;
import gtna.graph.Graph;
import gtna.networks.Network;

import java.util.Hashtable;

public interface Metric {
	/**
	 * computes all metric-specific data<br>
	 * has to be called before any other method
	 * 
	 * @param g
	 */
	public void computeData(Graph g, Network n, Hashtable<String, Metric> m);

	/**
	 * writes all generated data to the specified folder
	 * 
	 * @param folder
	 * @return true if operation is successful
	 */
	public boolean writeData(String folder);

	/**
	 * all single-scalar values generated by this metric
	 * 
	 * @param values
	 * @return single scalar values
	 */
	public Value[] getValues(Value[] values);

	/**
	 * name of the metric
	 * 
	 * @return name of the metric
	 */
	public String name();

	/**
	 * ke of the metric (mkey)
	 * 
	 * @return key of the metric (mkey)
	 */
	public String key();

	/**
	 * data keys of this metric
	 * 
	 * @return data keys of this metric
	 */
	public String[] dataKeys();

	/**
	 * single-scalar value keys
	 * 
	 * @return single-scalar valcue keys
	 */
	public String[] singlesKeys();

	public String[] dataPlots();

	public String[] singlesPlots();
}